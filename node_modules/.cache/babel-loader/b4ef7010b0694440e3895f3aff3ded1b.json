{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/LoginForm.js\";\nimport React, { Component } from 'react';\nimport Row from '../presentational/Row';\nimport Col from '../presentational/Col';\nimport Button from '../presentational/button/Button';\nimport { Link, withRouter, Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport InputGroup from '../presentational/input/InputGroup';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../store/Action';\nimport Axios from 'axios';\nimport { FormattedMessage } from 'react-intl';\nimport Preloader from '../presentational/Preloader';\nimport ErrorMessage from '../presentational/ErrorMessage';\nimport Icon from '../../img/Logo-mahex-small.png';\nimport { BASE_LOGIN } from '../../config/constants';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      username: '',\n      password: '',\n      loading: false,\n      loginError: {\n        show: false,\n        content: \"\"\n      }\n    }; // this.submit = this.submit.bind(this)\n  }\n\n  onChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  submit(e) {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = this.state;\n    this.setState({\n      loading: true\n    });\n    this.props.TOGGLE_MESSAGE({\n      show: false,\n      content: \"\"\n    });\n    let allow = \"false\"; // if (JSON.parse(localStorage.getItem('authentication'))) {\n    //     allow = JSON.parse(localStorage.getItem('authentication'))\n    //     this.setState({ loading: false })\n    // }\n    // if (allow == true) {\n    //     // this.props.TOGGLE_MESSAGE({ show: true, content: \"1001.1002\" })\n    //     this.setState({ loading: false })\n    //     return (\"home\")\n    // }\n    // else {\n    // const PROTOCOL = process.env.REACT_APP_REMOTE_SERVICE_PROTOCOL;\n    // const HOST = process.env.REACT_APP_REMOTE_SERVICE_HOST_NAME;\n    // const PORT = process.env.REACT_APP_REMOTE_SERVICE_HOST_PORT;\n    //  const HOST_URL = `${PROTOCOL}://${HOST}:${PORT}`;\n    // await axios.post(`${BASE_LOGIN+\"/login\"}`, {}, {\n    //     auth: {\n    //       username: uname,\n    //       password: pass\n    //     }\n    //   })\n\n    Axios.get(`${BASE_LOGIN + \"/login\"}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      auth: {\n        username: username,\n        password: password\n      }\n    }).then(res => {\n      localStorage.setItem(\"customer_fe_token\", JSON.stringify(res.data.access_token));\n      this.props.SET_PASSWORD(password);\n      this.props.SET_USERNAME(username);\n      this.props.SET_AUTHENTICATE(true);\n    }).catch(error => {\n      if (error.message !== \"Network Error\") {\n        if (error.response.status == 401) {\n          this.setState({\n            loginError: {\n              show: true,\n              content: \"1001.401\"\n            }\n          });\n        } else if (error.response.status == 500) {\n          this.setState({\n            loginError: {\n              show: true,\n              content: \"1001.500\"\n            }\n          });\n        }\n      } else {\n        this.setState({\n          loginError: {\n            show: true,\n            content: \"1001.Network\"\n          }\n        });\n      }\n\n      this.props.SET_AUTHENTICATE(false);\n    }).finally(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      loading,\n      loginError\n    } = this.state;\n    const {\n      authentication,\n      message\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"auth-wrapper d-flex no-block justify-content-center align-items-center costom-wrapper-authBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"auth-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      className: \"row el-element-overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-wrapper-loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"loginform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"db\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Icon,\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"h5\", {\n      className: \"font-medium m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u0645\\u0627\\u0646\\u0647\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.submit(e),\n      className: \"form-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      required: true,\n      disabled: loading,\n      iconName: \"ti-user\",\n      value: username,\n      placeholder: \"Username\",\n      name: \"username\",\n      onChange: e => {\n        this.onChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      required: true,\n      disabled: loading,\n      type: \"password\",\n      iconName: \"ti-pencil\",\n      value: password,\n      placeholder: \"Password\",\n      name: \"password\",\n      onChange: e => {\n        this.onChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Button // onClick={e => this.submit(e)}\n    , {\n      disabled: loading,\n      label: React.createElement(FormattedMessage, {\n        id: \"submit\",\n        defaultMessage: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }),\n      buttonclass: \"btn  waves-effect waves-light btn-block\",\n      type: loading ? \"btn-secondary\" : \"btn-info\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), loginError.show ? React.createElement(\"span\", {\n      className: \"custom-txt-c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      error: loginError.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, null)))))));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    authentication: store.Reducer.authentication,\n    message: store.Reducer.message\n  };\n};\n\nconst mapDispachToProps = dispach => {\n  return {\n    SET_AUTHENTICATE: value => {\n      dispach(actionCreator.SET_AUTHENTICATE(value));\n    },\n    SET_USERNAME: value => {\n      dispach(actionCreator.SET_USERNAME(value));\n    },\n    SET_PASSWORD: value => {\n      dispach(actionCreator.SET_PASSWORD(value));\n    },\n    TOGGLE_MESSAGE: value => {\n      dispach(actionCreator.TOGGLE_MESSAGE(value));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(LoginForm));","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/LoginForm.js"],"names":["React","Component","Row","Col","Button","Link","withRouter","Redirect","InputGroup","connect","actionCreator","Axios","FormattedMessage","Preloader","ErrorMessage","Icon","BASE_LOGIN","LoginForm","constructor","props","state","redirect","username","password","loading","loginError","show","content","onChange","event","target","value","name","setState","submit","e","preventDefault","TOGGLE_MESSAGE","allow","get","headers","auth","then","res","localStorage","setItem","JSON","stringify","data","access_token","SET_PASSWORD","SET_USERNAME","SET_AUTHENTICATE","catch","error","message","response","status","finally","render","authentication","mapStateToProps","store","Reducer","mapDispachToProps","dispach"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,2CAA3C;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,SAAN,SAAwBhB,SAAxB,CAAkC;AAC9BiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,OAAO,EAAE,KAJA;AAKTC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE;AAAxB;AALH,KAAb,CAFe,CASf;AACH;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,SAAKC,QAAL,CAAc;AACV,OAACD,IAAD,GAAQD;AADE,KAAd;AAGH;;AAEDG,EAAAA,MAAM,CAACC,CAAD,EAAI;AACNA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEd,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKH,KAApC;AACA,SAAKa,QAAL,CAAc;AAAET,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,SAAKL,KAAL,CAAWkB,cAAX,CAA0B;AAAEX,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAA1B;AACA,QAAIW,KAAK,GAAG,OAAZ,CALM,CAMN;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAED3B,IAAAA,KAAK,CAAC4B,GAAN,CAAW,GAAEvB,UAAU,GAAG,QAAS,EAAnC,EACK;AACIwB,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,4BAAoB;AAFf,OADb;AAKIC,MAAAA,IAAI,EAAE;AAAEnB,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,QAAAA,QAAQ,EAAEA;AAAhC;AALV,KADL,EASEmB,IATF,CASQC,GAAD,IAAS;AACXC,MAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACK,IAAJ,CAASC,YAAxB,CAA1C;AACA,WAAK9B,KAAL,CAAW+B,YAAX,CAAwB3B,QAAxB;AACA,WAAKJ,KAAL,CAAWgC,YAAX,CAAwB7B,QAAxB;AACA,WAAKH,KAAL,CAAWiC,gBAAX,CAA4B,IAA5B;AACH,KAdF,EAeGC,KAfH,CAeUC,KAAD,IAAW;AACf,UAAIA,KAAK,CAACC,OAAN,KAAkB,eAAtB,EAAuC;AACnC,YAAID,KAAK,CAACE,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;AAC9B,eAAKxB,QAAL,CAAc;AAAER,YAAAA,UAAU,EAAE;AAAEC,cAAAA,IAAI,EAAE,IAAR;AAAcC,cAAAA,OAAO,EAAE;AAAvB;AAAd,WAAd;AACH,SAFD,MAEO,IAAI2B,KAAK,CAACE,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;AACrC,eAAKxB,QAAL,CAAc;AAAER,YAAAA,UAAU,EAAE;AAAEC,cAAAA,IAAI,EAAE,IAAR;AAAcC,cAAAA,OAAO,EAAE;AAAvB;AAAd,WAAd;AACH;AACJ,OAND,MAOK;AACD,aAAKM,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAE;AAAEC,YAAAA,IAAI,EAAE,IAAR;AAAcC,YAAAA,OAAO,EAAE;AAAvB;AAAd,SAAd;AACH;;AACD,WAAKR,KAAL,CAAWiC,gBAAX,CAA4B,KAA5B;AACH,KA3BF,EA2BIM,OA3BJ,CA2BY,MAAM;AACb,WAAKzB,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEH,KA9BF;AAgCF;;AAEDmC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAErC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA,OAAtB;AAA+BC,MAAAA;AAA/B,QAA8C,KAAKL,KAAzD;AACA,UAAM;AAAEwC,MAAAA,cAAF;AAAkBL,MAAAA;AAAlB,QAA8B,KAAKpC,KAAzC;AAEA,WACI,0CACI;AAAK,MAAA,SAAS,EAAC,+FAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,OAAO,IACJ;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAFR,EAQI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB;AAAK,MAAA,GAAG,EAAET,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAFJ,CADJ,EAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAEoB,CAAC,IAAI,KAAKD,MAAL,CAAYC,CAAZ,CAArB;AAAqC,MAAA,SAAS,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,IADd;AAEI,MAAA,QAAQ,EAAEX,OAFd;AAGI,MAAA,QAAQ,EAAC,SAHb;AAII,MAAA,KAAK,EAAEF,QAJX;AAKI,MAAA,WAAW,EAAC,UALhB;AAMI,MAAA,IAAI,EAAC,UANT;AAOI,MAAA,QAAQ,EAAGa,CAAD,IAAO;AAAE,aAAKP,QAAL,CAAcO,CAAd;AAAkB,OAPzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,IADd;AAEI,MAAA,QAAQ,EAAEX,OAFd;AAGI,MAAA,IAAI,EAAE,UAHV;AAII,MAAA,QAAQ,EAAC,WAJb;AAKI,MAAA,KAAK,EAAED,QALX;AAMI,MAAA,WAAW,EAAC,UANhB;AAOI,MAAA,IAAI,EAAC,UAPT;AAQI,MAAA,QAAQ,EAAGY,CAAD,IAAO;AAAE,aAAKP,QAAL,CAAcO,CAAd;AAAkB,OARzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAoBI,oBAAC,MAAD,CACI;AADJ;AAEI,MAAA,QAAQ,EAAEX,OAFd;AAGI,MAAA,KAAK,EACD,oBAAC,gBAAD;AACI,QAAA,EAAE,EAAE,QADR;AAEI,QAAA,cAAc,EAAE,QAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AASI,MAAA,WAAW,EAAC,yCAThB;AAUI,MAAA,IAAI,EAAEA,OAAO,GAAG,eAAH,GAAqB,UAVtC;AAWI,MAAA,QAAQ,EAAC,QAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CADJ,EAmCKC,UAAU,CAACC,IAAX,GAEG;AAAM,MAAA,SAAS,EAAE,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAED,UAAU,CAACE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFH,GAWK,yCA9CV,CADJ,CALJ,CARJ,CADJ,CADJ,CADJ;AAyEH;;AAjK6B;;AAoKlC,MAAMkC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,cAAc,EAAEE,KAAK,CAACC,OAAN,CAAcH,cAD3B;AAEHL,IAAAA,OAAO,EAAEO,KAAK,CAACC,OAAN,CAAcR;AAFpB,GAAP;AAIH,CALD;;AAOA,MAAMS,iBAAiB,GAAIC,OAAD,IAAa;AACnC,SAAO;AACHb,IAAAA,gBAAgB,EAAGrB,KAAD,IAAW;AAAEkC,MAAAA,OAAO,CAACvD,aAAa,CAAC0C,gBAAd,CAA+BrB,KAA/B,CAAD,CAAP;AAAgD,KAD5E;AAEHoB,IAAAA,YAAY,EAAGpB,KAAD,IAAW;AAAEkC,MAAAA,OAAO,CAACvD,aAAa,CAACyC,YAAd,CAA2BpB,KAA3B,CAAD,CAAP;AAA4C,KAFpE;AAGHmB,IAAAA,YAAY,EAAGnB,KAAD,IAAW;AAAEkC,MAAAA,OAAO,CAACvD,aAAa,CAACwC,YAAd,CAA2BnB,KAA3B,CAAD,CAAP;AAA4C,KAHpE;AAIHM,IAAAA,cAAc,EAAGN,KAAD,IAAW;AAAEkC,MAAAA,OAAO,CAACvD,aAAa,CAAC2B,cAAd,CAA6BN,KAA7B,CAAD,CAAP;AAA8C;AAJxE,GAAP;AAMH,CAPD;;AASA,eAAezB,UAAU,CAACG,OAAO,CAACoD,eAAD,EAAkBG,iBAAlB,CAAP,CAA4C/C,SAA5C,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport Row from '../presentational/Row'\nimport Col from '../presentational/Col';\nimport Button from '../presentational/button/Button';\nimport { Link, withRouter, Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport InputGroup from '../presentational/input/InputGroup'\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../store/Action';\nimport Axios from 'axios';\nimport { FormattedMessage } from 'react-intl';\nimport Preloader from '../presentational/Preloader';\nimport ErrorMessage from '../presentational/ErrorMessage';\nimport Icon from '../../img/Logo-mahex-small.png'\nimport { BASE_LOGIN } from '../../config/constants'\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            username: '',\n            password: '',\n            loading: false,\n            loginError: { show: false, content: \"\" },\n        }\n        // this.submit = this.submit.bind(this)\n    }\n\n    onChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    submit(e) {\n        e.preventDefault()\n        const { username, password } = this.state\n        this.setState({ loading: true })\n        this.props.TOGGLE_MESSAGE({ show: false, content: \"\" })\n        let allow = \"false\"\n        // if (JSON.parse(localStorage.getItem('authentication'))) {\n        //     allow = JSON.parse(localStorage.getItem('authentication'))\n        //     this.setState({ loading: false })\n        // }\n\n        // if (allow == true) {\n        //     // this.props.TOGGLE_MESSAGE({ show: true, content: \"1001.1002\" })\n        //     this.setState({ loading: false })\n        //     return (\"home\")\n        // }\n        // else {\n        // const PROTOCOL = process.env.REACT_APP_REMOTE_SERVICE_PROTOCOL;\n        // const HOST = process.env.REACT_APP_REMOTE_SERVICE_HOST_NAME;\n        // const PORT = process.env.REACT_APP_REMOTE_SERVICE_HOST_PORT;\n        //  const HOST_URL = `${PROTOCOL}://${HOST}:${PORT}`;\n        // await axios.post(`${BASE_LOGIN+\"/login\"}`, {}, {\n        //     auth: {\n        //       username: uname,\n        //       password: pass\n        //     }\n        //   })\n      \n       Axios.get(`${BASE_LOGIN + \"/login\"}`,\n            {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'X-Requested-With': 'XMLHttpRequest'\n                },\n                auth: { username: username, password: password }\n            }\n        )\n        .then((res) => {\n            localStorage.setItem(\"customer_fe_token\", JSON.stringify(res.data.access_token));\n            this.props.SET_PASSWORD(password)\n            this.props.SET_USERNAME(username)\n            this.props.SET_AUTHENTICATE(true)\n        }\n        ).catch((error) => {\n            if (error.message !== \"Network Error\") {\n                if (error.response.status == 401) {\n                    this.setState({ loginError: { show: true, content: \"1001.401\" } })\n                } else if (error.response.status == 500) {\n                    this.setState({ loginError: { show: true, content: \"1001.500\" } })\n                }\n            }\n            else {\n                this.setState({ loginError: { show: true, content: \"1001.Network\" } })\n            }\n            this.props.SET_AUTHENTICATE(false)\n        }).finally(() => {\n            this.setState({ loading: false })\n\n        })\n\n    }\n\n    render() {\n        const { username, password, loading, loginError } = this.state\n        const { authentication, message } = this.props\n\n        return (\n            <>\n                <div className=\"auth-wrapper d-flex no-block justify-content-center align-items-center costom-wrapper-authBox\">\n                    <div className=\"auth-box\">\n                        {loading &&\n                            <div className=\"row el-element-overlay\">\n                                <div className=\"custom-wrapper-loading\" >\n                                    <Preloader />\n                                </div>\n                            </div>\n                        }\n                        <div id=\"loginform\">\n                            <div className=\"logo\">\n                                <span className=\"db\"><img src={Icon} alt=\"logo\" /></span>\n                                <h5 className=\"font-medium m-b-20\">ورود به سامانه</h5>\n                            </div>\n                            <Row>\n                                <div className=\"col-12\">\n                                    <form onSubmit={e => this.submit(e)} className=\"form-horizontal\">\n                                        <InputGroup\n                                            required={true}\n                                            disabled={loading}\n                                            iconName=\"ti-user\"\n                                            value={username}\n                                            placeholder=\"Username\"\n                                            name=\"username\"\n                                            onChange={(e) => { this.onChange(e) }}\n                                        />\n                                        <InputGroup\n                                            required={true}\n                                            disabled={loading}\n                                            type={\"password\"}\n                                            iconName=\"ti-pencil\"\n                                            value={password}\n                                            placeholder=\"Password\"\n                                            name=\"password\"\n                                            onChange={(e) => { this.onChange(e) }}\n                                        />\n                                        <Button\n                                            // onClick={e => this.submit(e)}\n                                            disabled={loading}\n                                            label={\n                                                <FormattedMessage\n                                                    id={\"submit\"}\n                                                    defaultMessage={\"submit\"}\n                                                />\n                                            }\n                                            buttonclass=\"btn  waves-effect waves-light btn-block\"\n                                            type={loading ? \"btn-secondary\" : \"btn-info\"}\n                                            htmlType=\"submit\"\n                                        />\n                                    </form>\n                                    {loginError.show\n                                        ?\n                                        <span className={\"custom-txt-c\"}>\n                                            <ErrorMessage error={loginError.content} />\n                                            {/* <span\n                                                style={{ \"color\": \"blue\" }} onClick={() => {\n                                                    window.location = '/shipments'\n                                                }}>\n                                                مشاهده صفحه \n                                            </span> */}\n                                        </span>\n                                        : <></>\n                                    }\n                                </div>\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        authentication: store.Reducer.authentication,\n        message: store.Reducer.message,\n    }\n}\n\nconst mapDispachToProps = (dispach) => {\n    return {\n        SET_AUTHENTICATE: (value) => { dispach(actionCreator.SET_AUTHENTICATE(value)) },\n        SET_USERNAME: (value) => { dispach(actionCreator.SET_USERNAME(value)) },\n        SET_PASSWORD: (value) => { dispach(actionCreator.SET_PASSWORD(value)) },\n        TOGGLE_MESSAGE: (value) => { dispach(actionCreator.TOGGLE_MESSAGE(value)) },\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(LoginForm));\n"]},"metadata":{},"sourceType":"module"}