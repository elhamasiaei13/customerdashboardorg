{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/ShipmentTracking.js\";\nimport React, { Component } from 'react';\nimport ShipmentTrackingDetail from './ShipmentTrackingDetail';\nimport { connect } from 'react-redux';\nimport Breadcrumb from '../presentational/breadcrumb/Breadcrumb';\nimport Breadcrumblayout from '../presentational/breadcrumb/Breadcrumblayout';\nimport ShipmentActionBar from './ShipmentActionBar';\nimport SearchWaybillNumber from './SearchWaybillNumber';\nimport ContainerFluid from '../content/ContainerFluid';\nimport logo from '../../img/shipper.png';\nimport Row from '../presentational/Row';\nimport Card from '../presentational/card/Card';\nimport Col from '../presentational/Col';\nimport * as actionCreator from '../../store/Action';\nimport ErrorHandeling from '../container/ErrorHandeling';\nimport { withRouter, Route, Redirect } from 'react-router-dom';\nimport Api from '../../config/Api';\nimport ErrorMessage from '../presentational/ErrorMessage';\nimport Preloader from '../presentational/Preloader';\nimport * as ErrorCode from '../../config/ErrorCode';\n\nclass ShipmentTracking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      data: [],\n      status: 'null',\n      message: null,\n      loading: false\n    };\n  }\n\n  componentDidMount(props) {\n    this.props.TOGGLE_MESSAGE({\n      show: false,\n      content: \"\"\n    });\n    this.getItemsShipmentTracking();\n  }\n\n  getItemsShipmentTracking() {\n    const {\n      waybillNumber,\n      userName,\n      password\n    } = this.props;\n\n    if (waybillNumber !== \" \") {\n      this.setState({\n        loading: true\n      });\n      Api.getShipmentTracking('/shipments/' + waybillNumber, {\n        userName: userName,\n        password: password\n      }).then(response => {\n        if (response != undefined) {\n          this.state.data = response;\n          this.state.status = \"found\";\n        }\n\n        this.state.show = true;\n        this.state.loading = false;\n        this.setState({});\n      }).catch(error => {\n        this.state.status = \"notFound\";\n        this.setState({});\n      }).finally(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      waybillNumber,\n      userName,\n      password\n    } = this.props;\n    const {\n      show,\n      data,\n      status,\n      message,\n      loading\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(Breadcrumblayout // nav={<ShipmentActionBar />}\n    , {\n      title: React.createElement(\"div\", {\n        className: \"d-flex flex-row comment-row m-t-0 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"(user)\",\n        className: \"rounded-circle\",\n        width: \"50\",\n        className: \"rounded-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"comment-text w-100 p-t-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(SearchWaybillNumber, {\n        waybillNumber: waybillNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), loading && React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(ContainerFluid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, message ? React.createElement(ErrorMessage, {\n      error: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, status == \"null\" ? React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })) : status == \"notFound\" ? React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Card, {\n      cardBodyclassName: \" bg-cyan text-white text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"please input correct waybill number notfound\"))) : React.createElement(React.Fragment, null, React.createElement(ShipmentTrackingDetail, {\n      waybillNumber: waybillNumber,\n      data: data,\n      show: this.state.show,\n      userName: userName,\n      password: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    userName: store.Reducer.userName,\n    password: store.Reducer.password\n  };\n};\n\nconst mapDispachToProps = dispach => {\n  return {\n    set_waybillNumber: value => {\n      dispach(actionCreator.SET_WAYBILLNUMBER(value));\n    },\n    SET_AUTHENTICATE: value => {\n      dispach(actionCreator.SET_AUTHENTICATE(value));\n    },\n    TOGGLE_MESSAGE: value => {\n      dispach(actionCreator.TOGGLE_MESSAGE(value));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(ShipmentTracking));","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/ShipmentTracking.js"],"names":["React","Component","ShipmentTrackingDetail","connect","Breadcrumb","Breadcrumblayout","ShipmentActionBar","SearchWaybillNumber","ContainerFluid","logo","Row","Card","Col","actionCreator","ErrorHandeling","withRouter","Route","Redirect","Api","ErrorMessage","Preloader","ErrorCode","ShipmentTracking","constructor","props","state","show","data","status","message","loading","componentDidMount","TOGGLE_MESSAGE","content","getItemsShipmentTracking","waybillNumber","userName","password","setState","getShipmentTracking","then","response","undefined","catch","error","finally","render","mapStateToProps","store","Reducer","mapDispachToProps","dispach","set_waybillNumber","value","SET_WAYBILLNUMBER","SET_AUTHENTICATE"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ShipmentTrackingDetail from './ShipmentTrackingDetail'\nimport { connect } from 'react-redux';\nimport Breadcrumb from '../presentational/breadcrumb/Breadcrumb';\nimport Breadcrumblayout from '../presentational/breadcrumb/Breadcrumblayout';\nimport ShipmentActionBar from './ShipmentActionBar';\nimport SearchWaybillNumber from './SearchWaybillNumber';\nimport ContainerFluid from '../content/ContainerFluid';\nimport logo from '../../img/shipper.png';\nimport Row from '../presentational/Row';\nimport Card from '../presentational/card/Card';\nimport Col from '../presentational/Col';\nimport * as actionCreator from '../../store/Action';\nimport ErrorHandeling from '../container/ErrorHandeling';\nimport { withRouter, Route, Redirect } from 'react-router-dom';\nimport Api from '../../config/Api';\nimport ErrorMessage from '../presentational/ErrorMessage'\nimport Preloader from '../presentational/Preloader';\nimport * as ErrorCode from '../../config/ErrorCode'\n\nclass ShipmentTracking extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { show: false, data: [], status: 'null', message: null, loading: false }\n    }\n\n    componentDidMount(props) {\n        this.props.TOGGLE_MESSAGE({ show: false, content: \"\" })\n        this.getItemsShipmentTracking()\n    }\n\n    getItemsShipmentTracking() {\n        const { waybillNumber, userName, password } = this.props\n        if (waybillNumber !== \" \") {\n\n            this.setState({ loading: true })\n            Api.getShipmentTracking('/shipments/' + waybillNumber, { userName: userName, password: password })\n                .then(response => {\n                    if (response != undefined) {\n                        this.state.data = response\n                        this.state.status = \"found\"\n                    }\n                    this.state.show = true\n                    this.state.loading = false\n                    this.setState({})\n                }).catch((error) => {\n                    this.state.status = \"notFound\"\n                    this.setState({})\n                }).finally(() => {\n                    this.setState({ loading: false })\n                })\n        }\n    }\n\n    render() {\n        const { waybillNumber, userName, password } = this.props\n        const { show, data, status, message, loading } = this.state\n        return (\n            <>\n                <Breadcrumblayout\n                    // nav={<ShipmentActionBar />}\n                    title={\n                        <div className=\"d-flex flex-row comment-row m-t-0 \">\n                            <div className=\"p-2\">\n                                <img src={logo} alt=\"(user)\" className=\"rounded-circle\" width=\"50\"\n                                    className=\"rounded-circle\"\n                                />\n                            </div>\n                            <div className=\"comment-text w-100 p-t-16\">\n                                <SearchWaybillNumber waybillNumber={waybillNumber} />\n                            </div>\n                        </div>\n\n                    }\n                />\n\n                {loading && <Preloader />}\n                <ContainerFluid >\n                    {message ? <ErrorMessage error={message} />\n                        : <>\n                            {status == \"null\"\n                                ?\n                                <Row>\n                                    <Col md={12}>\n                                    </Col>\n                                </Row>\n                                : status == \"notFound\" ?\n                                    <Row>\n                                        <Col md={12}>\n                                            <Card cardBodyclassName=\" bg-cyan text-white text-center\">\n                                                please input correct waybill number\n                                                notfound\n                                </Card>\n                                        </Col>\n                                    </Row>\n                                    :\n                                    <>\n                                        <ShipmentTrackingDetail\n                                            waybillNumber={waybillNumber}\n                                            data={data}\n                                            show={this.state.show}\n                                            userName={userName}\n                                            password={password}\n                                        />\n                                    </>\n                            }\n                        </>}\n\n                </ContainerFluid>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        userName: store.Reducer.userName,\n        password: store.Reducer.password\n    }\n}\n\n\nconst mapDispachToProps = (dispach) => {\n\n    return {\n        set_waybillNumber: (value) => { dispach(actionCreator.SET_WAYBILLNUMBER(value)) },\n        SET_AUTHENTICATE: (value) => { dispach(actionCreator.SET_AUTHENTICATE(value)) },\n        TOGGLE_MESSAGE: (value) => { dispach(actionCreator.TOGGLE_MESSAGE(value)) },\n\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(ShipmentTracking));\n"]},"metadata":{},"sourceType":"module"}