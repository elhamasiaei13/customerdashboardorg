{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/ButtonLoader.js\";\nimport React, { Component } from \"react\";\nimport Api from \"../../config/Api\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass ButtonLoader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.fetchData = () => {\n      const {\n        userName,\n        password,\n        readySearchParam\n      } = this.props;\n      this.setState({\n        loading: true\n      });\n      Api.getDownloadCsv(readySearchParam, {\n        userName: userName,\n        password: password\n      }).then((response, xhr) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        const urlSplit = url.split(\"/\");\n        const fileName = urlSplit[urlSplit.length - 1];\n        link.href = url;\n        link.setAttribute('download', fileName + \".xls\");\n        document.body.appendChild(link);\n        link.click();\n      }).finally(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    const {\n      readySearchParam\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      className: \"btn bg-orange waves-effect waves-light \",\n      onClick: this.fetchData,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, loading && React.createElement(\"i\", {\n      className: \"fa fa-refresh fa-spin\",\n      style: {\n        marginRight: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), !loading && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\u062E\\u0631\\u0648\\u062C\\u06CC \\u0627\\u06A9\\u0633\\u0644 \\u062D\\u062F\\u0627\\u06A9\\u062B\\u0631 \\u06F2\\u06F0\\u06F0\\u06F0 \\u0631\\u062F\\u06CC\\u0641\"), loading && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"  \\u062F\\u0631 \\u062D\\u0627\\u0644 \\u0628\\u0627\\u0631\\u06AF\\u0630\\u0627\\u0631\\u06CC  \")));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    userName: store.Reducer.userName,\n    password: store.Reducer.password,\n    readySearchParam: store.Reducer.readySearchParam\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(ButtonLoader));","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/ButtonLoader.js"],"names":["React","Component","Api","withRouter","connect","ButtonLoader","state","loading","fetchData","userName","password","readySearchParam","props","setState","getDownloadCsv","then","response","xhr","url","window","URL","createObjectURL","Blob","data","link","document","createElement","urlSplit","split","fileName","length","href","setAttribute","body","appendChild","click","finally","render","marginRight","mapStateToProps","store","Reducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCK,KADmC,GAC3B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD2B;;AAAA,SAKnCC,SALmC,GAKvB,MAAM;AAChB,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,UAA2C,KAAKC,KAAtD;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAL,MAAAA,GAAG,CAACY,cAAJ,CAAmBH,gBAAnB,EAAqC;AAAEF,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,QAAAA,QAAQ,EAAEA;AAAhC,OAArC,EAAiFK,IAAjF,CAAsF,CAACC,QAAD,EAAUC,GAAV,KAAkB;AACtG,cAAMC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACN,QAAQ,CAACO,IAAV,CAAT,CAA3B,CAAZ;AACF,cAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACE,cAAMC,QAAQ,GAAGT,GAAG,CAACU,KAAJ,CAAU,GAAV,CAAjB;AACA,cAAMC,QAAQ,GAAGF,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAzB;AACAN,QAAAA,IAAI,CAACO,IAAL,GAAYb,GAAZ;AACAM,QAAAA,IAAI,CAACQ,YAAL,CAAkB,UAAlB,EAA8BH,QAAQ,GAAG,MAAzC;AACAJ,QAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0BV,IAA1B;AACAA,QAAAA,IAAI,CAACW,KAAL;AACD,OATD,EAUGC,OAVH,CAUW,MAAM;AACb,aAAKvB,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAZH;AAeD,KAvBkC;AAAA;;AAyBnC8B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE9B,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAuB,KAAKC,KAAlC;AAGA,WACE,0CACE;AAAQ,MAAA,SAAS,EAAC,yCAAlB;AACE,MAAA,OAAO,EAAE,KAAKJ,SADhB;AAEE,MAAA,QAAQ,EAAED,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGA,OAAO,IACN;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,KAAK,EAAE;AAAE+B,QAAAA,WAAW,EAAE;AAAf,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EASG,CAAC/B,OAAD,IAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wJATf,EAUGA,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAVd,CADF,CADF;AAgBD;;AA9CkC;;AAkDrC,MAAMgC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAEL/B,IAAAA,QAAQ,EAAE+B,KAAK,CAACC,OAAN,CAAchC,QAFnB;AAGLC,IAAAA,QAAQ,EAAE8B,KAAK,CAACC,OAAN,CAAc/B,QAHnB;AAILC,IAAAA,gBAAgB,EAAE6B,KAAK,CAACC,OAAN,CAAc9B;AAJ3B,GAAP;AAOD,CARD;;AASA,eAAeR,UAAU,CAACC,OAAO,CAACmC,eAAD,CAAP,CAAyBlC,YAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport Api from \"../../config/Api\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass ButtonLoader extends Component {\n  state = {\n    loading: false\n  };\n\n  fetchData = () => {\n    const { userName, password, readySearchParam } = this.props\n    this.setState({ loading: true });\n    Api.getDownloadCsv(readySearchParam, { userName: userName, password: password }).then((response,xhr) => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n      const urlSplit = url.split(\"/\");\n      const fileName = urlSplit[urlSplit.length - 1]\n      link.href = url;\n      link.setAttribute('download', fileName + \".xls\");\n      document.body.appendChild(link);\n      link.click();\n    })\n      .finally(() => {\n        this.setState({ loading: false });\n      })\n\n\n  };\n\n  render() {\n    const { loading } = this.state;\n    const { readySearchParam } = this.props;\n\n\n    return (\n      <>\n        <button className=\"btn bg-orange waves-effect waves-light \"\n          onClick={this.fetchData}\n          disabled={loading}>\n          {loading && (\n            <i\n              className=\"fa fa-refresh fa-spin\"\n              style={{ marginRight: \"5px\" }}\n            />\n          )}\n          {!loading && <span>خروجی اکسل حداکثر ۲۰۰۰ ردیف</span>}\n          {loading && <span>  در حال بارگذاری  </span>}\n        </button>\n      </>\n    );\n  }\n}\n\n\nconst mapStateToProps = (store) => {\n  return {\n\n    userName: store.Reducer.userName,\n    password: store.Reducer.password,\n    readySearchParam: store.Reducer.readySearchParam\n\n  }\n}\nexport default withRouter(connect(mapStateToProps)(ButtonLoader))\n\n"]},"metadata":{},"sourceType":"module"}