{"ast":null,"code":"import * as Types from './ActionType';\nconst initialState = {\n  authentication: false,\n  data_tracking: \"null\",\n  waybillNumber: \" \",\n  userName: '',\n  password: '',\n  searchParam: null,\n  readySearchParam: null,\n  preLoader: false,\n  message: {\n    show: false,\n    content: \"\"\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  const newState = { ...state\n  };\n\n  switch (action.type) {\n    case Types.SET_AUTHENTICATE:\n      newState.authentication = action.payload;\n      localStorage.setItem(\"authentication\", JSON.stringify(action.payload));\n      break;\n\n    case Types.SET_DATA_TRACKING:\n      newState.data_tracking = action.payload;\n      localStorage.setItem(\"data_tracking\", JSON.stringify(action.payload));\n      break;\n\n    case Types.SET_WAYBILLNUMBER:\n      newState.waybillNumber = action.payload;\n      localStorage.setItem(\"waybillNumber\", JSON.stringify(action.payload));\n      break;\n\n    case Types.SET_USERNAME:\n      newState.userName = action.payload;\n      localStorage.setItem(\"userName\", JSON.stringify(action.payload));\n      break;\n\n    case Types.SET_PASSWORD:\n      newState.password = action.payload;\n      localStorage.setItem(\"password\", JSON.stringify(action.payload));\n      break;\n\n    case Types.SET_SEARCHPARAM:\n      newState.searchParam = action.payload;\n      break;\n\n    case Types.SET_READYSEARCHPARAM:\n      newState.readySearchParam = action.payload;\n      break;\n\n    case Types.TOGGLE_MESSAGE:\n      newState.message = action.payload; // setTimeout(() => {\n      //     newState.message={ show: false, content: \"88\" }\n      // }, 1000);\n\n      break;\n\n    case Types.TOGGLE_PRELOADER:\n      newState.preLoader = action.payload;\n      break;\n\n    default:\n  }\n\n  return newState;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/store/Reducer.js"],"names":["Types","initialState","authentication","data_tracking","waybillNumber","userName","password","searchParam","readySearchParam","preLoader","message","show","content","reducer","state","action","newState","type","SET_AUTHENTICATE","payload","localStorage","setItem","JSON","stringify","SET_DATA_TRACKING","SET_WAYBILLNUMBER","SET_USERNAME","SET_PASSWORD","SET_SEARCHPARAM","SET_READYSEARCHPARAM","TOGGLE_MESSAGE","TOGGLE_PRELOADER"],"mappings":"AAAA,OAAO,KAAIA,KAAX,MAAsB,cAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,KADC;AAEjBC,EAAAA,aAAa,EAAE,MAFE;AAGjBC,EAAAA,aAAa,EAAE,GAHE;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,QAAQ,EAAE,EALO;AAMjBC,EAAAA,WAAW,EAAE,IANI;AAOjBC,EAAAA,gBAAgB,EAAE,IAPD;AAQjBC,EAAAA,SAAS,EAAE,KARM;AASjBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB;AATQ,CAArB;;AAYA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAC9C,QAAMC,QAAQ,GAAG,EAAE,GAAGF;AAAL,GAAjB;;AACA,UAAQC,MAAM,CAACE,IAAf;AAEI,SAAKjB,KAAK,CAACkB,gBAAX;AACIF,MAAAA,QAAQ,CAACd,cAAT,GAA0Ba,MAAM,CAACI,OAAjC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACI,OAAtB,CAAvC;AACA;;AAEJ,SAAKnB,KAAK,CAACwB,iBAAX;AACIR,MAAAA,QAAQ,CAACb,aAAT,GAAyBY,MAAM,CAACI,OAAhC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACI,OAAtB,CAAtC;AACA;;AAEJ,SAAKnB,KAAK,CAACyB,iBAAX;AACIT,MAAAA,QAAQ,CAACZ,aAAT,GAAyBW,MAAM,CAACI,OAAhC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACI,OAAtB,CAAtC;AACA;;AAEJ,SAAKnB,KAAK,CAAC0B,YAAX;AACIV,MAAAA,QAAQ,CAACX,QAAT,GAAoBU,MAAM,CAACI,OAA3B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACI,OAAtB,CAAjC;AACA;;AAEJ,SAAKnB,KAAK,CAAC2B,YAAX;AACIX,MAAAA,QAAQ,CAACV,QAAT,GAAoBS,MAAM,CAACI,OAA3B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACI,OAAtB,CAAjC;AACA;;AAEJ,SAAKnB,KAAK,CAAC4B,eAAX;AACIZ,MAAAA,QAAQ,CAACT,WAAT,GAAuBQ,MAAM,CAACI,OAA9B;AACA;;AAEJ,SAAKnB,KAAK,CAAC6B,oBAAX;AACIb,MAAAA,QAAQ,CAACR,gBAAT,GAA4BO,MAAM,CAACI,OAAnC;AACA;;AAEJ,SAAKnB,KAAK,CAAC8B,cAAX;AACId,MAAAA,QAAQ,CAACN,OAAT,GAAmBK,MAAM,CAACI,OAA1B,CADJ,CAEI;AACA;AACA;;AACA;;AAEJ,SAAKnB,KAAK,CAAC+B,gBAAX;AACIf,MAAAA,QAAQ,CAACP,SAAT,GAAqBM,MAAM,CAACI,OAA5B;AACA;;AAEJ;AA9CJ;;AAgDA,SAAOH,QAAP;AACH,CAnDD;;AAoDA,eAAeH,OAAf","sourcesContent":["import *as Types from './ActionType'\n\nconst initialState = {\n    authentication: false,\n    data_tracking: \"null\",\n    waybillNumber: \" \",\n    userName: '',\n    password: '',\n    searchParam: null,\n    readySearchParam: null,\n    preLoader: false,\n    message: { show: false, content: \"\" }\n}\n\nconst reducer = (state = initialState, action) => {\n    const newState = { ...state };\n    switch (action.type) {\n\n        case Types.SET_AUTHENTICATE:\n            newState.authentication = action.payload;\n            localStorage.setItem(\"authentication\", JSON.stringify(action.payload));\n            break;\n\n        case Types.SET_DATA_TRACKING:\n            newState.data_tracking = action.payload;\n            localStorage.setItem(\"data_tracking\", JSON.stringify(action.payload));\n            break;\n\n        case Types.SET_WAYBILLNUMBER:\n            newState.waybillNumber = action.payload;\n            localStorage.setItem(\"waybillNumber\", JSON.stringify(action.payload));\n            break;\n\n        case Types.SET_USERNAME:\n            newState.userName = action.payload;\n            localStorage.setItem(\"userName\", JSON.stringify(action.payload));\n            break;\n\n        case Types.SET_PASSWORD:\n            newState.password = action.payload;\n            localStorage.setItem(\"password\", JSON.stringify(action.payload));\n            break;\n\n        case Types.SET_SEARCHPARAM:\n            newState.searchParam = action.payload;\n            break;\n\n        case Types.SET_READYSEARCHPARAM:\n            newState.readySearchParam = action.payload;\n            break;\n\n        case Types.TOGGLE_MESSAGE:\n            newState.message = action.payload;\n            // setTimeout(() => {\n            //     newState.message={ show: false, content: \"88\" }\n            // }, 1000);\n            break;\n\n        case Types.TOGGLE_PRELOADER:\n            newState.preLoader = action.payload;\n            break;\n\n        default:\n    }\n    return newState;\n}\nexport default reducer;"]},"metadata":{},"sourceType":"module"}