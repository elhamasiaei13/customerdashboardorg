{"ast":null,"code":"import axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { BASE_URL } from './constants';\nimport * as actionCreator from '../store/Action';\nimport ErrorHandeling from '../componenets/container/ErrorHandeling';\nimport ErrorCatchHandeling from '../componenets/container/ErrorCatchHandeling';\nimport { store } from '../index';\n\nclass Api {\n  static token() {\n    if (localStorage.getItem('customer_fe_token')) {\n      return JSON.parse(localStorage.getItem('customer_fe_token'));\n    } else {\n      return null;\n    }\n  }\n\n  static set_header() {\n    const header = {\n      'Content-Type': 'application/json',\n      \"Authorization\": \"Bearer \" + this.token()\n    };\n    return header;\n  }\n\n  static get(uri, auth = {\n    userName: '',\n    password: ''\n  }) {\n    const encoded = encodeURI(BASE_URL + uri);\n    return axios.get(encoded, {\n      params: {},\n      auth: {\n        username: auth.userName,\n        password: auth.password\n      }\n    });\n  } // static get(uri, auth = { userName: '', password: '' }) {\n  //     const encoded = encodeURI(BASE_URL + uri, { headers: this.set_header() })\n  //     store.dispatch(actionCreator.TOGGLE_PRELOADER(true))\n  //     return axios.get(encoded)\n  //         .then((response) => {\n  //             return ErrorHandeling(response, \"shipments\")\n  //         })\n  //         .catch((error) => {\n  //             ErrorCatchHandeling(error)\n  //         })\n  // }\n  // static get(uri, type) {\n  //     return axios.get(BASE_URL + uri, { headers: this.set_header() })\n  //         .then(response => { return ErrorHandeling(response, \"shipments\") })\n  //         .catch(error => { ErrorCatchHandeling(error) });\n  // }\n\n\n  static getShipments(uri, auth = {\n    userName: '',\n    password: ''\n  }) {\n    const encoded = encodeURI(BASE_URL + uri);\n    return axios.get(encoded, {\n      params: {},\n      auth: {\n        username: auth.userName,\n        password: auth.password\n      }\n    }).then(response => {\n      return ErrorHandeling(response, \"shipments\");\n    }).catch(error => {\n      ErrorCatchHandeling(error);\n    }); // const encoded = encodeURI(BASE_URL + uri)\n    // return axios.get(encoded, { headers: this.set_header()})\n    //     .then((response) => {\n    //         return ErrorHandeling(response, \"shipments\")\n    //     })\n    //     .catch((error) => {\n    //         ErrorCatchHandeling(error)\n    //     })\n  }\n\n  static getShipmentTracking(uri, auth = {\n    userName: '',\n    password: ''\n  }) {\n    const encoded = encodeURI(BASE_URL + uri);\n    return axios.get(encoded, {\n      params: {},\n      auth: {\n        username: auth.userName,\n        password: auth.password\n      }\n    }).then(response => {\n      return ErrorHandeling(response, \"shipmentTracking\");\n    }).catch(error => {\n      ErrorCatchHandeling(error);\n    });\n  } // static getShipmentTracking(uri,auth = { userName: '', password: '' }) {\n  //     const encoded = encodeURI(BASE_URL + uri)\n  //     return axios.get(encoded, {\n  //         headers: this.set_header()\n  //     })\n  //         .then((response) => {\n  //             return ErrorHandeling(response, \"shipmentTracking\")\n  //         })\n  //         .catch((error) => {\n  //             ErrorCatchHandeling(error)\n  //         })\n  // }\n\n\n  static getCod(uri, auth = {\n    userName: '',\n    password: ''\n  }) {\n    const encoded = encodeURI(BASE_URL + uri);\n    return axios.get(encoded, {\n      params: {},\n      auth: {\n        username: auth.userName,\n        password: auth.password\n      }\n    }).then(response => {\n      return ErrorHandeling(response, \"Cod\");\n    }).catch(error => {\n      ErrorCatchHandeling(error);\n    });\n  } // static getCod(uri, auth = { userName: '', password: '' }) {\n  //     const encoded = encodeURI(BASE_URL + uri)\n  //     return axios.get(encoded, {\n  //         headers: this.set_header()\n  //     })\n  //         .then((response) => {\n  //             return ErrorHandeling(response, \"Cod\")\n  //         })\n  //         .catch((error) => {\n  //             ErrorCatchHandeling(error)\n  //         })\n  // }\n\n\n  static getImage(uri, auth = {\n    userName: '',\n    password: ''\n  }) {\n    return axios.get(BASE_URL + uri, {\n      auth: {\n        username: auth.userName,\n        password: auth.password\n      },\n      responseType: 'arraybuffer'\n    });\n  }\n\n  static getDownloadCsv(params, auth = {\n    userName: '',\n    password: ''\n  }) {\n    const encoded = encodeURI(BASE_URL + '/shipments/export/csv?' + params);\n    return axios.get(encoded, {\n      auth: {\n        username: auth.userName,\n        password: auth.password\n      },\n      responseType: 'blob'\n    }).then(response => {\n      return response;\n    }).catch(error => {\n      console.log('error :>> ', error);\n    });\n  }\n\n}\n\nApi.getWorld = async () => {\n  // return await axios.get(this.baseUrl + \"custom/world-continents.geo.json\");\n  return await axios.get(\"https://code.highcharts.com/mapdata/countries/ir/ir-all.geo.json\"); // custom/world-continents.js\n  // custom/world-continents.geo.json\n  // custom/ir-all.geo.json\n  // \"custom/ir-all.geo.json\"\n};\n\nexport default Api;","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/config/Api.js"],"names":["axios","connect","BASE_URL","actionCreator","ErrorHandeling","ErrorCatchHandeling","store","Api","token","localStorage","getItem","JSON","parse","set_header","header","get","uri","auth","userName","password","encoded","encodeURI","params","username","getShipments","then","response","catch","error","getShipmentTracking","getCod","getImage","responseType","getDownloadCsv","console","log","getWorld"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { connect } from \"react-redux\";\nimport {BASE_URL } from './constants'\nimport * as actionCreator from '../store/Action';\nimport ErrorHandeling from '../componenets/container/ErrorHandeling'\nimport ErrorCatchHandeling from '../componenets/container/ErrorCatchHandeling';\nimport { store } from '../index';\n\nclass Api {\n        static token() {\n            if (localStorage.getItem('customer_fe_token')) { return JSON.parse(localStorage.getItem('customer_fe_token')) }\n            else { return null; }\n        }\n\n        static set_header() {\n            const header = {\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \" + this.token()\n            }\n            return (header)\n        }\n\n        static get(uri, auth = { userName: '', password: '' }) {\n            const encoded= encodeURI(BASE_URL + uri)\n            return axios.get(encoded, {\n                params: {},\n                auth: { username: auth.userName, password: auth.password }\n            })\n        }\n    \n\n        // static get(uri, auth = { userName: '', password: '' }) {\n        //     const encoded = encodeURI(BASE_URL + uri, { headers: this.set_header() })\n        //     store.dispatch(actionCreator.TOGGLE_PRELOADER(true))\n        //     return axios.get(encoded)\n        //         .then((response) => {\n        //             return ErrorHandeling(response, \"shipments\")\n        //         })\n        //         .catch((error) => {\n        //             ErrorCatchHandeling(error)\n        //         })\n        // }\n\n        // static get(uri, type) {\n        //     return axios.get(BASE_URL + uri, { headers: this.set_header() })\n        //         .then(response => { return ErrorHandeling(response, \"shipments\") })\n        //         .catch(error => { ErrorCatchHandeling(error) });\n        // }\n\n\n        static getShipments(uri,auth = { userName: '', password: '' }) {\n\n            const encoded= encodeURI(BASE_URL + uri)\n            return axios.get(encoded, {\n                params: {},\n                auth: { username: auth.userName, password: auth.password }\n            }).then((response) => {\n                return ErrorHandeling(response, \"shipments\")\n            })\n            .catch((error) => {\n                ErrorCatchHandeling(error)\n            })\n            // const encoded = encodeURI(BASE_URL + uri)\n            // return axios.get(encoded, { headers: this.set_header()})\n            //     .then((response) => {\n            //         return ErrorHandeling(response, \"shipments\")\n            //     })\n            //     .catch((error) => {\n            //         ErrorCatchHandeling(error)\n            //     })\n\n        }\n\n\n        static getShipmentTracking(uri,auth = { userName: '', password: '' }) {\n            const encoded = encodeURI(BASE_URL + uri)\n            return axios.get(encoded, {\n                params: {},\n                auth: { username: auth.userName, password: auth.password }\n            })\n                .then((response) => {\n                    return ErrorHandeling(response, \"shipmentTracking\")\n                })\n                .catch((error) => {\n                    ErrorCatchHandeling(error)\n                })\n        }\n\n        // static getShipmentTracking(uri,auth = { userName: '', password: '' }) {\n        //     const encoded = encodeURI(BASE_URL + uri)\n        //     return axios.get(encoded, {\n        //         headers: this.set_header()\n        //     })\n        //         .then((response) => {\n        //             return ErrorHandeling(response, \"shipmentTracking\")\n        //         })\n        //         .catch((error) => {\n        //             ErrorCatchHandeling(error)\n        //         })\n        // }\n\n        static getCod(uri, auth = { userName: '', password: '' }) {\n            const encoded = encodeURI(BASE_URL + uri)\n            return axios.get(encoded,{\n                params: {},\n                auth: { username: auth.userName, password: auth.password }\n            })\n                .then((response) => {\n                    return ErrorHandeling(response, \"Cod\")\n                })\n                .catch((error) => {\n                    ErrorCatchHandeling(error)\n                })\n        }\n        // static getCod(uri, auth = { userName: '', password: '' }) {\n        //     const encoded = encodeURI(BASE_URL + uri)\n        //     return axios.get(encoded, {\n        //         headers: this.set_header()\n        //     })\n        //         .then((response) => {\n        //             return ErrorHandeling(response, \"Cod\")\n        //         })\n        //         .catch((error) => {\n        //             ErrorCatchHandeling(error)\n        //         })\n        // }\n\n        static getImage(uri, auth = { userName: '', password: '' }) {\n            return axios.get(BASE_URL + uri,\n                {\n                    auth: { username: auth.userName, password: auth.password },\n                    responseType: 'arraybuffer'\n                })\n        }\n        \n\n        static getDownloadCsv(params, auth = { userName: '', password: '' }) {\n            const encoded = encodeURI(BASE_URL + '/shipments/export/csv?' + params)\n            return (axios.get(encoded, {\n                auth: { username: auth.userName, password: auth.password }, \n                responseType: 'blob',\n            }).then((response) => {\n                return(response)\n               \n            })\n                .catch((error) => {\n                    console.log('error :>> ', error);\n                }))\n        }\n        \n    \n\n        static getWorld = async () => {\n            // return await axios.get(this.baseUrl + \"custom/world-continents.geo.json\");\n            return await axios.get(\"https://code.highcharts.com/mapdata/countries/ir/ir-all.geo.json\");\n            // custom/world-continents.js\n            // custom/world-continents.geo.json\n            // custom/ir-all.geo.json\n            // \"custom/ir-all.geo.json\"\n     };\n}\n\nexport default (Api);\n\n"]},"metadata":{},"sourceType":"module"}