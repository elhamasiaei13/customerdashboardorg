{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/PersonDataView.js\";\nimport React, { Component } from 'react';\nimport FormData from '../presentational/input/FormData';\nimport ViewData from '../presentational/input/ViewData';\nimport ViewLabel from '../presentational/input/ViewLabel';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nclass PersonDataView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: ''\n    };\n  }\n\n  render() {\n    const data = this.props.data;\n    return React.createElement(React.Fragment, null, data && React.createElement(React.Fragment, null, React.createElement(ViewLabel, {\n      value: React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, data.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), (data.clientId || data.nationalId) && React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, data.clientId ? React.createElement(ViewData, {\n      label: React.createElement(FormattedMessage, {\n        id: \"clientId\",\n        defaultMessage: \"clientId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }),\n      value: data.clientId ? data.clientId : false,\n      pClassName: \"widtdP\",\n      valueClassName: \"padding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }) : '', data.clientId & data.nationalId ? React.createElement(\"span\", {\n      className: \"viewDatataSplit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"/\") : '', data.nationalId ? React.createElement(ViewData, {\n      label: React.createElement(FormattedMessage, {\n        id: \"nationalId\",\n        defaultMessage: \"nationalId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }),\n      value: data.nationalId ? data.nationalId : false,\n      valueClassName: \"padding-right\",\n      pClassName: \"widtdP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : ''), data.country && data.province && React.createElement(ViewLabel, {\n      value: React.createElement(React.Fragment, null, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" \", data.city ? data.city : ' '), React.createElement(\"span\", {\n        className: \"gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" (\", data.country ? data.country : ' ', \"\\xA0,\\xA0\", data.province ? data.province : ' ', \")\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(ViewLabel, {\n      value: React.createElement(React.Fragment, null, data.address ? data.address : ' ', \" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(FormData, {\n      label: React.createElement(FormattedMessage, {\n        id: \"phone\",\n        defaultMessage: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      value: data.phones ? data.phones : ' ',\n      labelClassName: \"\",\n      valueClassName: \"padding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), data.postalCode ? React.createElement(FormData, {\n      label: React.createElement(FormattedMessage, {\n        id: \"postalCode\",\n        defaultMessage: \"postalCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      value: data.postalCode ? data.postalCode : ' ',\n      labelClassName: \"\",\n      valueClassName: \"padding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : \"\"));\n  }\n\n}\n\nPersonDataView.defaultProps = {\n  data: {\n    city: \"teuu\"\n  }\n};\nexport default PersonDataView;","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/PersonDataView.js"],"names":["React","Component","FormData","ViewData","ViewLabel","connect","FormattedMessage","PersonDataView","constructor","props","state","phone","render","data","name","clientId","nationalId","country","province","city","address","phones","postalCode","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FormData from '../presentational/input/FormData';\nimport ViewData from '../presentational/input/ViewData';\nimport ViewLabel from '../presentational/input/ViewLabel';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nclass PersonDataView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            phone: ''\n        }\n    }\n    render() {\n        const data = this.props.data\n\n        return (\n            <>\n            {data && <>\n                    <ViewLabel value={<b>{data.name}</b>} />\n                    {(data.clientId || data.nationalId) &&\n                        <div className=\"form-group row\">\n                            {data.clientId ?\n                                <ViewData\n                                    label={\n                                        <FormattedMessage\n                                            id={\"clientId\"}\n                                            defaultMessage={\"clientId\"}\n                                        />\n                                    }\n                                    value={data.clientId ? data.clientId : false}\n                                    pClassName={\"widtdP\"}\n                                    valueClassName=\"padding-right\"\n                                />\n                                : ''\n                            }\n                            {data.clientId & data.nationalId ? <span className=\"viewDatataSplit\">/</span> : ''}\n                            {data.nationalId ?\n                                <ViewData\n                                    label={\n                                        <FormattedMessage\n                                            id={\"nationalId\"}\n                                            defaultMessage={\"nationalId\"}\n                                        />\n                                    }\n                                    value={data.nationalId ? data.nationalId : false}\n                                    valueClassName=\"padding-right\"\n                                    pClassName={\"widtdP\"}\n                                />\n                                : ''\n                            }\n                        </div>\n                    }\n\n                    {(data.country && data.province) &&\n                        <ViewLabel\n                            value={<><b> {data.city ? data.city : ' '}</b>\n                                <span className={\"gray\"}> ({data.country ? data.country : ' '}&nbsp;,&nbsp;{data.province ? data.province : ' '})</span></>}\n                        />\n                    }\n\n                    <ViewLabel\n                        value={<>{data.address ? data.address : ' '} </>}\n                    />\n\n                    <FormData\n                        label={\n                            <FormattedMessage\n                                id={\"phone\"}\n                                defaultMessage={\"phone\"}\n                            />\n                        }\n                        value={data.phones ? data.phones : ' '}\n                        labelClassName=\"\"\n                        valueClassName=\"padding-right\"\n\n                    />\n\n                    {data.postalCode ?\n                        <FormData\n                            label={\n                                <FormattedMessage\n                                    id={\"postalCode\"}\n                                    defaultMessage={\"postalCode\"}\n                                />\n                            }\n                            value={data.postalCode ? data.postalCode : ' '}\n                            labelClassName=\"\"\n                            valueClassName=\"padding-right\"\n                        /> : \"\"\n                    }\n                </>\n                }\n            </>\n        )\n    }\n}\n\n\nPersonDataView.defaultProps = {\n    data: {\n        city: \"teuu\"\n    }\n}\n\nexport default (PersonDataView);\n"]},"metadata":{},"sourceType":"module"}