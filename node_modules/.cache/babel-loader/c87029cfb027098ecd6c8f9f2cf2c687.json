{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/Home.js\";\nimport React, { Component } from 'react';\nimport Chart from '../presentational/chart/Chart';\nimport Col from '../presentational/Col';\nimport Row from '../presentational/Row';\nimport Card from '../presentational/card/Card';\nimport Progress from '../presentational/progress/Progress';\nimport StackChart from '../presentational/chart/StackChart';\nimport MApChart from '../presentational/chart/MapChart';\nimport Map from '../presentational/chart/Map';\nimport MapAdvanced from '../presentational/chart/MapAdvanced';\nimport CardChart from '../presentational/card/CardChart';\nimport '../presentational/Proj4/Proj4';\nimport Table from '../presentational/table/Table';\nconst gdpData = {\n  \"IR-QZVN-P\": 15888.97,\n  \"IR-CHBK-P\": 188.97\n};\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Card, {\n      cardTitle: \"Sales Ratio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(StackChart, {\n      categories: ['شنبه', 'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهار شنبه', 'پنج شنبه', 'جمعه'],\n      colors: ['rgb(139, 94, 221)', 'rgb(90, 193, 70)', '#fa5838', 'rgb(19, 126, 255)', \"#f81300\", \"#2310a4\", \"#16ac00\", \"#f9c600\"],\n      data: [{\n        name: 'DELIVERED',\n        data: [1, 3, 4, 7, 2, 5, 5]\n      }, {\n        name: 'ISSUED',\n        data: [2, 2, 3, 2, 1, 3, 5]\n      }, {\n        name: 'VOIDED',\n        data: [2, 2, 3, 2, 1, 3, 8]\n      }, {\n        name: 'RETURNED',\n        data: [3, 4, 4, 2, 5, 3, 10]\n      }] // title={\"title\"}\n      ,\n      titleY: \"labelY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Card, {\n      cardClass: \" \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"d-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u0648\\u0636\\u0639\\u06CC\\u062A\")), React.createElement(\"div\", {\n      class: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(Map, {\n      gdpData: gdpData,\n      backgroundColor: \"#fff\",\n      onRegionTipShow: (e, el, code) => {\n        el.html(el.html() + ' ( تعداد مرسوله ها - ' + gdpData[code] + ')');\n      },\n      series: {\n        regions: [{\n          values: [],\n          scale: ['#C8EEFF', '#0071A4'],\n          normalizeFunction: 'polynomial'\n        }]\n      },\n      regionStyle: {\n        initial: {\n          fill: \"#cccccc\",\n          \"fill-opacity\": 1,\n          stroke: \"none\",\n          \"stroke-width\": 0,\n          \"stroke-opacity\": 0\n        },\n        hover: {\n          \"fill-opacity\": 1,\n          fill: \"#C8EEFF\",\n          cursor: \"pointer\"\n        },\n        selected: {\n          fill: \"#dce3e8\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Table, {\n      classTable: \" table-striped table-hover\",\n      classHeader: \"bg-inverse text-white text-center\",\n      theader: ['#', \"name\", \"outboundParcels\", \"inboundParcels\"],\n      tbody: [{\n        test: 1,\n        name: \"tehran\",\n        count: \"1050\",\n        outboundParcels: 51.507222,\n        inboundParcels: -0.1275\n      }, {\n        name: \"esfahan\",\n        count: \"1050\",\n        outboundParcels: 51.507222,\n        inboundParcels: -0.1275\n      }],\n      classBody: \"\",\n      defaultKey: \"defaultKey\" // sort={true}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Card, {\n      cardClass: \" \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"d-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u0648\\u0636\\u0639\\u06CC\\u062A\"))), React.createElement(Map // map={'ir_mill'}\n    , {\n      backgroundColor: \"#fff\",\n      regionsSelectable: true,\n      markersSelectable: true,\n      hoverOpacity: 0.7 // markers={markers}\n      ,\n      containerStyle: {\n        width: '100%',\n        height: '100%'\n      },\n      markerStyle: {\n        initial: {\n          fill: 'grey',\n          stroke: '#505050',\n          \"fill-opacity\": 1,\n          \"stroke-width\": 1,\n          \"stroke-opacity\": 1,\n          r: 5\n        },\n        hover: {\n          stroke: 'black',\n          \"stroke-width\": 2\n        },\n        selected: {// fill: 'blue'\n        },\n        selectedHover: {}\n      },\n      markers: [{\n        latLng: [30.33, 48.30],\n        name: \"My marker name\",\n        style: {\n          fill: 'yellow'\n        }\n      }, {\n        latLng: [31.33, 48.30],\n        name: \"My marker name\",\n        style: {\n          fill: 'yellow'\n        }\n      }, {\n        latLng: [30.33, 47.30],\n        name: \"My marker name\",\n        style: {\n          fill: 'yellow'\n        }\n      }, {\n        latLng: [41.8781136, -87.6297982],\n        name: \"My marker name\",\n        style: {\n          fill: 'yellow'\n        }\n      }],\n      regionStyle: {\n        initial: {\n          fill: '#dce3e8'\n        }\n      },\n      selected: {\n        fill: 'red'\n      },\n      series: {\n        markers: [{\n          attribute: 'r',\n          scale: [5, 15],\n          values: [887.70, 755.16, 300010.69, 405.17, 248.31, 207.35, 217.22, 280.71, 210.32, 325.42]\n        }]\n      },\n      containerClassName: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Table, {\n      classTable: \" table-striped table-hover\",\n      classHeader: \"bg-inverse text-white text-center\",\n      theader: ['#', \"city\", \"outboundParcels\", \"inboundParcels\"],\n      tbody: [{\n        \"city\": \"tehran\",\n        \"outboundParcels\": 32.37,\n        \"inboundParcels\": 51.300629,\n        \"z\": 205764\n      }, {\n        \"city\": \"emarat\",\n        \"outboundParcels\": 33.39,\n        \"inboundParcels\": 52.300629,\n        \"z\": 205764\n      }, {\n        \"city\": \"esfahan\",\n        \"outboundParcels\": 33.59,\n        \"inboundParcels\": 52.300629,\n        \"z\": 205764\n      }, {\n        \"city\": \"emarat\",\n        \"outboundParcels\": 33.39,\n        \"inboundParcels\": 52.300629,\n        \"z\": 205764\n      }, {\n        \"city\": \"esfahan\",\n        \"outboundParcels\": 33.59,\n        \"inboundParcels\": 52.300629,\n        \"z\": 205764\n      }],\n      classBody: \"\",\n      defaultKey: \"defaultKey\" // sort={true}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/container/Home.js"],"names":["React","Component","Chart","Col","Row","Card","Progress","StackChart","MApChart","Map","MapAdvanced","CardChart","Table","gdpData","Home","constructor","props","state","render","name","data","e","el","code","html","regions","values","scale","normalizeFunction","initial","fill","stroke","hover","cursor","selected","test","count","outboundParcels","inboundParcels","width","height","r","selectedHover","latLng","style","markers","attribute"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Chart from '../presentational/chart/Chart'\nimport Col from '../presentational/Col';\nimport Row from '../presentational/Row';\nimport Card from '../presentational/card/Card';\nimport Progress from '../presentational/progress/Progress';\nimport StackChart from '../presentational/chart/StackChart'\nimport MApChart from '../presentational/chart/MapChart';\nimport Map from '../presentational/chart/Map';\nimport MapAdvanced from '../presentational/chart/MapAdvanced';\nimport CardChart from '../presentational/card/CardChart';\nimport '../presentational/Proj4/Proj4';\nimport Table from '../presentational/table/Table';\n\nconst gdpData = {\n    \"IR-QZVN-P\": 15888.97,\n    \"IR-CHBK-P\": 188.97,\n}\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n\n    }\n    render() {\n        return (\n            <>\n                <Row>\n                    <Col md={12} >\n                        <Card cardTitle=\"Sales Ratio\">\n\n                            <StackChart\n                                categories={['شنبه', 'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهار شنبه', 'پنج شنبه', 'جمعه']}\n                                colors={[\n                                    'rgb(139, 94, 221)', 'rgb(90, 193, 70)', '#fa5838', 'rgb(19, 126, 255)',\n                                    \"#f81300\", \"#2310a4\", \"#16ac00\", \"#f9c600\"]}\n                                data={[{\n                                    name: 'DELIVERED',\n                                    data: [1, 3, 4, 7, 2, 5, 5],\n                                },\n                                {\n                                    name: 'ISSUED',\n                                    data: [2, 2, 3, 2, 1, 3, 5]\n                                },\n                                {\n                                    name: 'VOIDED',\n                                    data: [2, 2, 3, 2, 1, 3, 8]\n                                },\n                                {\n                                    name: 'RETURNED',\n                                    data: [3, 4, 4, 2, 5, 3, 10]\n                                }]}\n                                // title={\"title\"}\n                                titleY={\"labelY\"}\n                            />\n                        </Card>\n                    </Col>\n                </Row>\n\n                {/* <Card> */}\n                <Row>\n                    <Col md={6}>\n                        <Card cardClass=\" \" >\n                            <div class=\"d-flex align-items-center\">\n                                <div>\n                                    <h4 class=\"card-title\">نمایش وضعیت</h4>\n                                </div>\n                                <div class=\"ml-auto\">\n\n                                </div>\n                            </div>\n\n                            <Map\n                                gdpData={gdpData}\n                                backgroundColor=\"#fff\"\n                                onRegionTipShow={(e, el, code) => {\n                                    el.html(el.html() + ' ( تعداد مرسوله ها - ' + gdpData[code] + ')');\n                                }}\n                                series={{\n                                    regions: [{\n                                        values: [],\n                                        scale: ['#C8EEFF', '#0071A4'],\n                                        normalizeFunction: 'polynomial'\n                                    }]\n                                }}\n                                regionStyle={{\n                                    initial: {\n                                        fill: \"#cccccc\",\n                                        \"fill-opacity\": 1,\n                                        stroke: \"none\",\n                                        \"stroke-width\": 0,\n                                        \"stroke-opacity\": 0\n                                    },\n                                    hover: {\n                                        \"fill-opacity\": 1,\n                                        fill: \"#C8EEFF\",\n                                        cursor: \"pointer\"\n                                    },\n                                    selected: {\n                                        fill: \"#dce3e8\"\n                                    }\n                                }}\n                            />\n                            <Table\n                                classTable=\" table-striped table-hover\"\n                                classHeader=\"bg-inverse text-white text-center\"\n                                theader={['#', \"name\", \"outboundParcels\", \"inboundParcels\"]}\n                                tbody={[{ test: 1, name: \"tehran\", count: \"1050\", outboundParcels: 51.507222, inboundParcels: -0.1275 },\n                                { name: \"esfahan\", count: \"1050\", outboundParcels: 51.507222, inboundParcels: -0.1275 }]}\n\n                                classBody=''\n                                defaultKey='defaultKey'\n                            // sort={true}\n                            />\n\n                        </Card>\n                    </Col>\n                    <Col md={6}>\n                        <Card cardClass=\" \">\n                            <div class=\"d-flex align-items-center\">\n                                <div>\n                                    <h4 class=\"card-title\">نمایش وضعیت</h4>\n                                </div>\n\n                            </div>\n                            <Map\n                                // map={'ir_mill'}\n                                backgroundColor=\"#fff\"\n                                regionsSelectable={true}\n                                markersSelectable={true}\n                                hoverOpacity={0.7}\n                                // markers={markers}\n                                containerStyle={{\n                                    width: '100%',\n                                    height: '100%'\n                                }}\n                                markerStyle={{\n                                    initial: {\n                                        fill: 'grey',\n                                        stroke: '#505050',\n                                        \"fill-opacity\": 1,\n                                        \"stroke-width\": 1,\n                                        \"stroke-opacity\": 1,\n                                        r: 5\n                                    },\n                                    hover: {\n                                        stroke: 'black',\n                                        \"stroke-width\": 2\n                                    },\n                                    selected: {\n                                        // fill: 'blue'\n                                    },\n                                    selectedHover: {\n                                    }\n                                }}\n                                markers={[\n                                    { latLng: [30.33, 48.30], name: \"My marker name\", style: { fill: 'yellow' } },\n                                    { latLng: [31.33, 48.30], name: \"My marker name\", style: { fill: 'yellow' } },\n                                    { latLng: [30.33, 47.30], name: \"My marker name\", style: { fill: 'yellow' } },\n                                    { latLng: [41.8781136, -87.6297982], name: \"My marker name\", style: { fill: 'yellow' } },\n                                ]}\n                                regionStyle={{\n                                    initial: {\n                                        fill: '#dce3e8'\n                                    }\n                                }}\n                                selected={{\n                                    fill: 'red'\n                                }}\n                                series={{\n                                    markers: [{\n                                        attribute: 'r',\n                                        scale: [5, 15],\n                                        values: [\n                                            887.70,\n                                            755.16,\n                                            300010.69,\n                                            405.17,\n                                            248.31,\n                                            207.35,\n                                            217.22,\n                                            280.71,\n                                            210.32,\n                                            325.42\n                                        ]\n                                    }]\n                                }}\n                                containerClassName=\"map\"\n\n                            />\n                            {/* <MapAdvanced /> */}\n                            <Table\n                                classTable=\" table-striped table-hover\"\n                                classHeader=\"bg-inverse text-white text-center\"\n                                theader={['#', \"city\", \"outboundParcels\", \"inboundParcels\"]}\n                                tbody={[{\n                                    \"city\": \"tehran\",\n                                    \"outboundParcels\": 32.37,\n                                    \"inboundParcels\": 51.300629,\n                                    \"z\": 205764,\n                                },\n                                {\n                                    \"city\": \"emarat\",\n                                    \"outboundParcels\": 33.39,\n                                    \"inboundParcels\": 52.300629,\n                                    \"z\": 205764,\n                                },\n                                {\n                                    \"city\": \"esfahan\",\n                                    \"outboundParcels\": 33.59,\n                                    \"inboundParcels\": 52.300629,\n                                    \"z\": 205764\n                                },\n                                {\n                                    \"city\": \"emarat\",\n                                    \"outboundParcels\": 33.39,\n                                    \"inboundParcels\": 52.300629,\n                                    \"z\": 205764,\n                                },\n                                {\n                                    \"city\": \"esfahan\",\n                                    \"outboundParcels\": 33.59,\n                                    \"inboundParcels\": 52.300629,\n                                    \"z\": 205764\n                                },\n                                ]}\n\n                                classBody=''\n                                defaultKey='defaultKey'\n                            // sort={true}\n                            />\n\n                        </Card>\n                    </Col>\n                </Row>\n                {/* </Card> */}\n\n\n            </>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}