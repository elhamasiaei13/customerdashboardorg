{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/presentational/chart/StackChart.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nexport default class StacckChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => this.setState({\n      count: 2\n    }), 1000);\n  }\n\n  render() {\n    const options = {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: this.props.title\n      },\n      xAxis: {\n        categories: this.props.categories\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: this.props.titleY\n        },\n        stackLabels: {\n          enabled: true,\n          style: {\n            fontWeight: 'bold',\n            color: Highcharts.defaultOptions.title.style && Highcharts.defaultOptions.title.style.color || 'red'\n          }\n        }\n      },\n      legend: {\n        align: 'right',\n        x: -480,\n        verticalAlign: 'bottom',\n        y: 20,\n        z: 0,\n        floating: false,\n        backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#1111',\n        borderColor: '#CCC',\n        borderWidth: 1,\n        shadow: false\n      },\n      tooltip: {\n        pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',\n        shared: true\n      },\n      plotOptions: {\n        column: {\n          stacking: 'normal',\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      series: this.props.data,\n      colors: this.props.colors\n    };\n    const {\n      count\n    } = this.state;\n    return React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/presentational/chart/StackChart.js"],"names":["React","Component","Highcharts","HighchartsReact","StacckChart","constructor","props","state","count","componentDidMount","setInterval","setState","render","options","chart","type","title","text","xAxis","categories","yAxis","min","titleY","stackLabels","enabled","style","fontWeight","color","defaultOptions","legend","align","x","verticalAlign","y","z","floating","backgroundColor","borderColor","borderWidth","shadow","tooltip","pointFormat","shared","plotOptions","column","stacking","dataLabels","series","data","colors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAC/CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,WAAW,CAAC,MAAM,KAAKC,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAE;AAAT,KAAd,CAAP,EAAoC,IAApC,CAAX;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE;AADH,OADK;AAIZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWU;AADd,OAJK;AAOZE,MAAAA,KAAK,EAAE;AACHC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADpB,OAPK;AAUZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,GAAG,EAAE,CADF;AAEHL,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWgB;AADd,SAFJ;AAKHC,QAAAA,WAAW,EAAE;AACTC,UAAAA,OAAO,EAAE,IADA;AAETC,UAAAA,KAAK,EAAE;AACHC,YAAAA,UAAU,EAAE,MADT;AAEHC,YAAAA,KAAK,EACDzB,UAAU,CAAC0B,cAAX,CAA0BZ,KAA1B,CAAgCS,KAAhC,IACAvB,UAAU,CAAC0B,cAAX,CAA0BZ,KAA1B,CAAgCS,KAAhC,CAAsCE,KAFnC,IAGF;AALF;AAFE;AALV,OAVK;AA0BZE,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,OADH;AAEJC,QAAAA,CAAC,EAAE,CAAC,GAFA;AAGJC,QAAAA,aAAa,EAAE,QAHX;AAIJC,QAAAA,CAAC,EAAE,EAJC;AAKJC,QAAAA,CAAC,EAAC,CALE;AAMJC,QAAAA,QAAQ,EAAE,KANN;AAOJC,QAAAA,eAAe,EACXlC,UAAU,CAAC0B,cAAX,CAA0BC,MAA1B,CAAiCO,eAAjC,IAAoD,OARpD;AASJC,QAAAA,WAAW,EAAE,MATT;AAUJC,QAAAA,WAAW,EAAE,CAVT;AAWJC,QAAAA,MAAM,EAAE;AAXJ,OA1BI;AAuCZC,MAAAA,OAAO,EAAE;AACLC,QAAAA,WAAW,EAAE,0GADR;AAELC,QAAAA,MAAM,EAAE;AAFH,OAvCG;AA2CZC,MAAAA,WAAW,EAAE;AACTC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAE,QADN;AAEJC,UAAAA,UAAU,EAAE;AACRtB,YAAAA,OAAO,EAAE;AADD;AAFR;AADC,OA3CD;AAmDZuB,MAAAA,MAAM,EAAE,KAAKzC,KAAL,CAAW0C,IAnDP;AAoDZC,MAAAA,MAAM,EAAE,KAAK3C,KAAL,CAAW2C;AApDP,KAAhB;AAsDA,UAAM;AAAEzC,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WACI,oBAAC,eAAD;AACI,MAAA,UAAU,EAAEL,UADhB;AAEI,MAAA,OAAO,EAAEW,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AA1E8C","sourcesContent":["import React, { Component } from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nexport default class StacckChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 1\n        }\n    }\n\n    componentDidMount() {\n        setInterval(() => this.setState({ count: 2 }), 1000)\n    }\n\n    render() {\n        const options = {\n            chart: {\n                type: 'column'\n            },\n            title: {\n                text: this.props.title\n            },\n            xAxis: {\n                categories: this.props.categories\n            },\n            yAxis: {\n                min: 0,\n                title: {\n                    text: this.props.titleY\n                },\n                stackLabels: {\n                    enabled: true,\n                    style: {\n                        fontWeight: 'bold',\n                        color: (\n                            Highcharts.defaultOptions.title.style &&\n                            Highcharts.defaultOptions.title.style.color\n                        ) || 'red'\n                    }\n                }\n            },\n            legend: {\n                align: 'right',\n                x: -480,\n                verticalAlign: 'bottom',\n                y: 20,\n                z:0,\n                floating: false,\n                backgroundColor:\n                    Highcharts.defaultOptions.legend.backgroundColor || '#1111',\n                borderColor: '#CCC',\n                borderWidth: 1,\n                shadow: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',\n                shared: true\n            },\n            plotOptions: {\n                column: {\n                    stacking: 'normal',\n                    dataLabels: {\n                        enabled: true\n                    }\n                }\n            },\n            series: this.props.data,\n            colors: this.props.colors\n        }\n        const { count } = this.state\n        return (\n            <HighchartsReact\n                highcharts={Highcharts}\n                options={options}\n            />\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}