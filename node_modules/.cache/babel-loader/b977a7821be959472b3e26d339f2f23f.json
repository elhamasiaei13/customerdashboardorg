{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/presentational/table/Table.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link, withRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../../store/Action'; // import eye from '../../../img/eye.png';\n\nimport Preloader from '../Preloader';\nimport ConvertMoney from '../../ConvertMoney';\nimport { exportDefaultSpecifier } from '@babel/types';\nimport TableHeader from './TableHeader';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.CreateHeader = (theader, sort, colsort) => {\n      const head = [];\n      theader.map((item, index) => {\n        if (item == \"activity\" || item == \"#\" || sort == false) {\n          head.push(React.createElement(\"th\", {\n            key: item,\n            scope: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: item,\n            defaultMessage: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          })));\n        } else if (sort) {\n          head.push(React.createElement(TableHeader, {\n            key: item,\n            scope: \"col\",\n            lable: item,\n            showIconSort: colsort == item ? true : false,\n            reportName: val => {\n              this.setState({\n                colSort: val\n              }, () => console.log(\"TableHeader reportName\", this.state)) // this.props.sortTable(val)\n              ;\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }));\n        }\n      });\n      return head;\n    };\n\n    this.testArray = test => {\n      test.map(item => {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, item);\n      });\n    };\n\n    this.CreateBody = (tbody, theader) => {\n      const {\n        defaultKey,\n        indexVariable\n      } = this.props;\n      let initIndex = 0;\n\n      if (indexVariable) {\n        initIndex = indexVariable.size * (indexVariable.activePage - 1);\n      }\n\n      let i = 1;\n      const body = [];\n      tbody.map((row, index) => {\n        const waybillNumber = row.waybillNumber;\n        let keyWrapper = '';\n\n        if (row.partNumber) {\n          i++;\n          keyWrapper = row.partNumber;\n        } else {\n          i++;\n          keyWrapper = waybillNumber + i;\n        }\n\n        body.push(React.createElement(\"tr\", {\n          key: defaultKey + keyWrapper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, theader.map(colmn => {\n          if (colmn === \"#\") {\n            ++i;\n            return React.createElement(\"td\", {\n              key: defaultKey + index + i + 1,\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, initIndex + index + 1);\n          } else if (colmn == \"waybillNumber\") {\n            ++i;\n            return React.createElement(\"td\", {\n              key: defaultKey + index + 2 + i // onClick={() =>\n              //     this.props.set_waybillnumber(waybillNumber)\n              // } \n              ,\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: {\n                pathname: `/shipments/view/${row.waybillNumber}`,\n                state: {\n                  waybillNumber: row.waybillNumber\n                }\n              } // to={`/shipments/view/${row.waybillNumber}`}\n              ,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, waybillNumber));\n          } else if (colmn == \"activity\") {\n            ++i;\n            return React.createElement(\"td\", {\n              key: defaultKey + index + 2.5 + i,\n              onClick: () => this.props.set_waybillnumber(waybillNumber),\n              scope: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: {\n                pathname: `/shipments/view/${row.waybillNumber}`,\n                state: {\n                  waybillNumber: row.waybillNumber\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              src: eye,\n              width: \"25\",\n              alt: \"view\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            })));\n          } else if (colmn === \"DIMs\") {\n            i++;\n            return React.createElement(\"td\", {\n              key: defaultKey + index + 3 + i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, row.width, \" * \", row.height, \"* \", row.length, \" \", React.createElement(FormattedMessage, {\n              id: \"cm\",\n              defaultMessage: \"cm\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }));\n          } else if (colmn === \"chargeParty\") {\n            i++;\n            const viewClass = row.chargeParty == \"پس کرایه\" ? 'badge-danger' : 'label-success';\n            return React.createElement(\"td\", {\n              key: defaultKey + index + i + row.chargeParty,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"label label-rounded \" + viewClass,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141\n              },\n              __self: this\n            }, row.chargeParty));\n          } else if (colmn === \"paymentMethod\") {\n            const viewClass = row.paymentMethod == \"نقد\" ? 'label-success' : row.paymentMethod == \"اعتباری\" ? 'label-info' : 'label-green';\n            return React.createElement(\"td\", {\n              key: defaultKey + index + 5 + row.paymentMethod,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"label label-rounded \" + viewClass,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            }, row.paymentMethod ? React.createElement(FormattedMessage, {\n              id: row.paymentMethod,\n              defaultMessage: row.paymentMethod,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }) : \"-\"));\n          } else if (colmn === \"currentState\") {\n            return React.createElement(\"td\", {\n              key: index + 5 + row.paymentMethod,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: row.currentState == \"ISSUED\" ? \" text-teal\" : // row.currentState == \"DRAFT\" ? \"text-file\" :\n              // row.currentState == \"MANIFESTED\" ? \"text-maroon\" :\n              // row.currentState == \"IN_TRANSIT\" ? \"text-yellow\" :\n              // row.currentState == \"CONFIRMED_PICKUP_REQ\" ? \"text-orange\" :\n              row.currentState == \"VOIDED\" ? \"text-red\" : // row.currentState == \"IN_WAREHOUSE\" ? \"text-teal\" :\n              row.currentState == \"DELIVERED\" ? \"text-olive\" : // row.currentState == \"NOT_DELIVERED\" ? \"text-teal\" :\n              row.currentState == \"RETURNED\" ? \"text-purple\" // row.currentState == \"MASTERED\" ? \"text-blue\" :\n              // row.currentState == \"OFFLOADED\" ? \"text-red\" :\n              // row.currentState == \"text_DELIVERY\" ? \"text-purple\"\n              : '',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 184\n              },\n              __self: this\n            }, row.currentState ? React.createElement(FormattedMessage, {\n              id: row.currentState,\n              defaultMessage: row.currentState,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186\n              },\n              __self: this\n            }) : '-')));\n          } else if (colmn === \"volumetricWeight\") {\n            return React.createElement(\"td\", {\n              key: defaultKey + index + row.volumetricWeight + 3 + i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 196\n              },\n              __self: this\n            }, row.volumetricWeight, \" \", React.createElement(FormattedMessage, {\n              id: \"kg\",\n              defaultMessage: \"kg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 199\n              },\n              __self: this\n            }));\n          } else if (colmn === \"grossWeight\") {\n            return React.createElement(\"td\", {\n              key: defaultKey + index + row.grossWeight + 3 + i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205\n              },\n              __self: this\n            }, row.grossWeight, \" \", React.createElement(FormattedMessage, {\n              id: \"kg\",\n              defaultMessage: \"kg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 208\n              },\n              __self: this\n            }));\n          } else if (colmn === \"declaredValue\") {\n            return React.createElement(\"td\", {\n              key: defaultKey + index + row.declaredValue + 3 + i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 214\n              },\n              __self: this\n            }, ConvertMoney(row.declaredValue), \" \", React.createElement(FormattedMessage, {\n              id: \"rial\",\n              defaultMessage: \"rial\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 218\n              },\n              __self: this\n            }));\n          } else if (colmn === \"codAmount\") {\n            return React.createElement(\"td\", {\n              key: defaultKey + index + row.declaredValue + 3.5 + i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 225\n              },\n              __self: this\n            }, ConvertMoney(row.codAmount), \" \");\n          } else {\n            i++;\n            return React.createElement(\"td\", {\n              key: defaultKey + keyWrapper + row[colmn] + i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 233\n              },\n              __self: this\n            }, row[colmn]);\n          }\n        })));\n      });\n      return body;\n    };\n\n    this.state = {\n      total: 1,\n      colSort: \"\"\n    };\n    this.CreateBody = this.CreateBody.bind(this);\n  }\n\n  render() {\n    const {\n      to,\n      tbody,\n      key,\n      sort,\n      ...rest\n    } = this.props;\n    const {\n      theader,\n      classTable,\n      classHeader,\n      classBody,\n      ...props\n    } = this.props;\n    const {\n      colSort\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"table-responsive \",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-hover \" + classTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: classHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, this.CreateHeader(theader, sort, colSort))), React.createElement(\"tbody\", {\n      key: tbody,\n      className: classBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, this.CreateBody(tbody, theader))));\n  }\n\n}\n\nconst mapDispachToProps = dispach => {\n  return {\n    set_waybillnumber: value => {\n      dispach(actionCreator.SET_WAYBILLNUMBER(value));\n    }\n  };\n};\n\nTable.defaultProps = {\n  theader: [],\n  tbody: [],\n  classHeader: '',\n  classTable: '',\n  classBody: '',\n  defaultKey: 'defaultKey',\n  sort: false\n};\nexport default withRouter(connect(null, mapDispachToProps)(Table));","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/customerdash-fe/src/componenets/presentational/table/Table.js"],"names":["React","Component","FormattedMessage","Link","withRouter","connect","actionCreator","Preloader","ConvertMoney","exportDefaultSpecifier","TableHeader","Table","constructor","props","CreateHeader","theader","sort","colsort","head","map","item","index","push","val","setState","colSort","console","log","state","testArray","test","CreateBody","tbody","defaultKey","indexVariable","initIndex","size","activePage","i","body","row","waybillNumber","keyWrapper","partNumber","colmn","pathname","set_waybillnumber","eye","width","height","length","viewClass","chargeParty","paymentMethod","currentState","volumetricWeight","grossWeight","declaredValue","codAmount","total","bind","render","to","key","rest","classTable","classHeader","classBody","mapDispachToProps","dispach","value","SET_WAYBILLNUMBER","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\nimport { Link, withRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../../store/Action';\n// import eye from '../../../img/eye.png';\nimport Preloader from '../Preloader';\nimport ConvertMoney from '../../ConvertMoney';\nimport { exportDefaultSpecifier } from '@babel/types';\nimport TableHeader from './TableHeader'\n\n\nclass Table extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            total: 1,\n            colSort: \"\"\n        }\n        this.CreateBody = this.CreateBody.bind(this)\n    }\n\n\n    CreateHeader = (theader, sort, colsort) => {\n        const head = []\n\n        theader.map((item, index) => {\n            if (item == \"activity\" || item == \"#\" || sort == false) {\n                head.push(\n                    <th\n                        key={item} scope=\"col\">\n                        <FormattedMessage\n                            id={item}\n                            defaultMessage={item}\n                        />\n                    </th>\n                )\n            } else if (sort) {\n                head.push(\n                    <TableHeader\n                        key={item} scope=\"col\"\n                        lable={item}\n                        showIconSort={colsort == item ? true : false}\n                        reportName={(val) => {\n                            this.setState({ colSort: val } ,()=>console.log(\"TableHeader reportName\", this.state))\n                            // this.props.sortTable(val)\n                            ;\n                        }}\n                    />\n                )\n            }\n        })\n        return head;\n    }\n\n    testArray = (test) => {\n        test.map((item) => {\n            return <td>{item}</td>\n        })\n    }\n\n    CreateBody = (tbody, theader) => {\n        const { defaultKey, indexVariable } = this.props\n        let initIndex = 0\n        if (indexVariable ) {\n           initIndex = indexVariable.size * (indexVariable.activePage - 1)\n        }\n\n        let i = 1\n        const body = [];\n        tbody.map((row, index) => {\n            const waybillNumber = row.waybillNumber\n\n\n            let keyWrapper = ''\n            if (row.partNumber) {\n                i++\n                keyWrapper = row.partNumber\n            } else {\n                i++\n                keyWrapper = waybillNumber + i\n            }\n            body.push(<tr\n                key={defaultKey + keyWrapper}>\n                {theader.map((colmn) => {\n                    if (colmn === \"#\") {\n                        ++i\n                        return <td\n                            key={defaultKey + index + i + 1}\n                            scope=\"row\">{initIndex + index + 1}</td>\n                    } else if (colmn == \"waybillNumber\") {\n                        ++i\n                        return <td\n                            key={defaultKey + index + 2 + i}\n                            // onClick={() =>\n                            //     this.props.set_waybillnumber(waybillNumber)\n                            // } \n                            scope=\"row\">\n                            <Link\n                                to={{\n                                    pathname: `/shipments/view/${row.waybillNumber}`,\n                                    state: { waybillNumber: row.waybillNumber }\n                                }}\n                            // to={`/shipments/view/${row.waybillNumber}`}\n                            >\n                                {waybillNumber}\n                            </Link>\n                        </td>\n                    } else if (colmn == \"activity\") {\n                        ++i\n                        return <td\n                            key={defaultKey + index + 2.5 + i}\n                            onClick={() =>\n                                this.props.set_waybillnumber(waybillNumber)\n                            } scope=\"row\">\n                            <Link\n                                to={{\n                                    pathname: `/shipments/view/${row.waybillNumber}`,\n                                    state: { waybillNumber: row.waybillNumber }\n                                }}\n\n                            >\n                                <img src={eye} width=\"25\" alt=\"view\" />\n                            </Link>\n                        </td>\n                    } else if (colmn === \"DIMs\") {\n                        i++\n                        return (<td\n                            key={defaultKey + index + 3 + i}>{row.width} * {row.height}* {row.length}\n                            {\" \"}\n                            <FormattedMessage\n                                id={\"cm\"}\n                                defaultMessage={\"cm\"}\n                            />\n                        </td>)\n                    } else if (colmn === \"chargeParty\") {\n                        i++\n                        const viewClass = row.chargeParty == \"پس کرایه\" ? 'badge-danger' : 'label-success'\n                        return (<td\n                            key={defaultKey + index + i + row.chargeParty}>\n                            <span\n                                className={\"label label-rounded \" + viewClass} >\n                                {row.chargeParty}\n                            </span>\n                        </td>)\n                    } else if (colmn === \"paymentMethod\") {\n                        const viewClass = row.paymentMethod == \"نقد\" ? 'label-success' :\n                            row.paymentMethod == \"اعتباری\" ? 'label-info' : 'label-green'\n\n                        return (<td\n                            key={defaultKey + index + 5 + row.paymentMethod}  >\n                            <span\n                                className={\"label label-rounded \" + viewClass} >\n                                {row.paymentMethod ?\n                                    <FormattedMessage\n                                        id={row.paymentMethod}\n                                        defaultMessage={row.paymentMethod}\n                                    />\n                                    : \"-\"}\n                            </span>\n                        </td>)\n                    } else if (colmn === \"currentState\") {\n\n                        return (\n                            <td\n                                key={index + 5 + row.paymentMethod}>\n                                <span\n                                    className={\n                                        row.currentState == \"ISSUED\" ? \" text-teal\" :\n                                            // row.currentState == \"DRAFT\" ? \"text-file\" :\n                                            // row.currentState == \"MANIFESTED\" ? \"text-maroon\" :\n                                            // row.currentState == \"IN_TRANSIT\" ? \"text-yellow\" :\n                                            // row.currentState == \"CONFIRMED_PICKUP_REQ\" ? \"text-orange\" :\n                                            row.currentState == \"VOIDED\" ? \"text-red\" :\n                                                // row.currentState == \"IN_WAREHOUSE\" ? \"text-teal\" :\n                                                row.currentState == \"DELIVERED\" ? \"text-olive\" :\n                                                    // row.currentState == \"NOT_DELIVERED\" ? \"text-teal\" :\n                                                    row.currentState == \"RETURNED\" ? \"text-purple\"\n                                                        // row.currentState == \"MASTERED\" ? \"text-blue\" :\n                                                        // row.currentState == \"OFFLOADED\" ? \"text-red\" :\n                                                        // row.currentState == \"text_DELIVERY\" ? \"text-purple\"\n                                                        : ''}\n                                >\n                                    <b>\n                                        {row.currentState ?\n                                            <FormattedMessage\n                                                id={row.currentState}\n                                                defaultMessage={row.currentState}\n                                            />\n                                            : '-'\n                                        }\n                                    </b>\n                                </span>\n                            </td>)\n                    } else if (colmn === \"volumetricWeight\") {\n                        return (<td\n                            key={defaultKey + index + row.volumetricWeight + 3 + i}>{row.volumetricWeight}\n                            {\" \"}\n                            <FormattedMessage\n                                id={\"kg\"}\n                                defaultMessage={\"kg\"}\n                            />\n                        </td>)\n                    } else if (colmn === \"grossWeight\") {\n                        return (<td\n                            key={defaultKey + index + row.grossWeight + 3 + i}>{row.grossWeight}\n                            {\" \"}\n                            <FormattedMessage\n                                id={\"kg\"}\n                                defaultMessage={\"kg\"}\n                            />\n                        </td>)\n                    } else if (colmn === \"declaredValue\") {\n                        return (<td\n                            key={defaultKey + index + row.declaredValue + 3 + i}>\n                            {ConvertMoney(row.declaredValue)}\n                            {\" \"}\n                            <FormattedMessage\n                                id={\"rial\"}\n                                defaultMessage={\"rial\"}\n                            />\n                        </td>)\n                    }\n                    else if (colmn === \"codAmount\") {\n                        return (<td\n                            key={defaultKey + index + row.declaredValue + 3.5 + i}>\n                            {ConvertMoney(row.codAmount)}\n                            {\" \"}\n\n                        </td>)\n                    } else {\n                        i++\n                        return <td key={defaultKey + keyWrapper + row[colmn] + i} >{row[colmn]}</td>\n                    }\n                })}\n            </tr>)\n        })\n        return body;\n    }\n\n    render() {\n        const { to, tbody, key, sort, ...rest } = this.props;\n        const { theader, classTable, classHeader, classBody, ...props } = this.props\n        const { colSort } = this.state\n        return (\n            <div className=\"table-responsive \" key={key} >\n                <table className={\"table table-hover \" + classTable} >\n                    <thead className={classHeader} >\n                        <tr >\n                            {this.CreateHeader(theader, sort, colSort)}\n                        </tr>\n                    </thead>\n                    <tbody key={tbody} className={classBody}>\n                        {this.CreateBody(tbody, theader)}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapDispachToProps = (dispach) => {\n    return {\n        set_waybillnumber: (value) => { dispach(actionCreator.SET_WAYBILLNUMBER(value)) }\n    }\n}\n\nTable.defaultProps = {\n    theader: [],\n    tbody: [],\n    classHeader: '',\n    classTable: '',\n    classBody: '',\n    defaultKey: 'defaultKey',\n    sort: false\n}\n\nexport default withRouter(connect(null, mapDispachToProps)(Table))\n"]},"metadata":{},"sourceType":"module"}